---
# tasks file for ansible-minibian_core

- name: '[main] Setting hostname'
  hostname: name={{ minibian_core_host_name }}
  become: yes

- name: '[main] Setting timezone'
  timezone: name=America/Vancouver
  become: yes

- stat: path=/usr/bin/sudo
  register: sudo

- name: '[main] Install sudo'
  apt: name=sudo state=present
  when: sudo.stat.exists == False
  become: yes

#========= UPDATING FIRMWARE: ========
# needs: echo 'nameserver 8.8.8.8' > /etc/resolv.conf
# which is done in 'expandfs' role.
- name: '[main] Installing latest rpi-update'
  apt: name=rpi-update state=latest force=yes
  become: yes

- name: '[main] Updating firmware'
  command: rpi-update
  become: yes
#=====================================

- name: '[main] Setting EDITOR and TERM environment variables'
  blockinfile:
    path: /etc/profile.d/env_var.sh
    follow: yes
    create: yes
    mode: 0644
    owner: root
    group: root
    content: |
      export EDITOR="/usr/bin/vim"
      export TERM="xterm-256color"  # For vim colors in tmux
    marker: "# {mark} ======== VIM role: Ansible managed block ========="
  become: yes
  tags:
    - vim

#========= CONFIGURING PROMPT ========
# required because 'command: mv ...' will return error
# if /etc/skel does not exist
- name: '[main] check if /etc/skel exists'
  stat: path=/etc/skel
  register: skel_stat

- name: '[main] check if /etc/skel.dist exists (in case /etc/skel was already backed up)'
  stat: path=/etc/skel.dist
  register: skel_dist_stat

- name: '[main] Backup distro /etc/skel'
  command: mv /etc/skel /etc/skel.dist
  become: yes
  when: skel_stat.stat.exists == True and skel_dist_stat.stat.exists == False

- name: '[main] Copying /etc/skel contents'
  copy: src=etc/skel/ dest=/etc/skel
  become: yes

- name: '[main] Copying .bashrc and .profile to home directory of current user'
  copy: src=etc/skel/ dest="{{ ansible_env.HOME}}/"
#=====================================

#========== DISTRO UPGRADE ===========
- name: '[main] Upgrading distro'
  apt: upgrade=dist autoclean=yes autoremove=yes
  become: yes
#====================================

#======= CREATE SPECIFIED USERS ======
# The ansible 'user' module seems to use 'useradd' tool on linux
# There is no way to make it use 'adduser' instead and this causes problem
- include_tasks: create_users.yml
#=====================================

#========= SET ROOT PASSWORD: ========
- name: '[main] Change root password'
  user: name=root password={{ minibian_core_new_root_passwd }}
  become: yes
#=====================================
...
