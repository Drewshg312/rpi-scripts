---
- hosts: raspberrypi_3
  vars_files:
    - vars.yml
  #become: yes

#  pre_tasks:
#    - name: Include variables
#      include_vars: vars.yml
# OR:
#      include_vars:
#        file: vars.yml
#        name: variables
  pre_tasks:
    - name: Setting hostname
      hostname: name="{{ host_name }}"
      become: yes

    - name: Setting timezone
      timezone: name=America/Vancouver
      become: yes

    - name: Temporarily set dns to 8.8.8.8 in order to resolve '*.raspberrypi.org'
      shell: echo 'nameserver 8.8.8.8' > /etc/resolv.conf
      become: yes

  roles:
    - expandfs
    - network
    - vim
  tasks:

#    - stat: path=/usr/bin/sudo
#      register: sudo

#    - name: Install sudo
#      apt: name=sudo state=present
#      when: sudo.stat.exists == False
#      become: yes

    #========= UPDATING FIRMWARE: ========
    # needs: echo 'nameserver 8.8.8.8' > /etc/resolv.conf
    # which is done in 'expandfs' role.
    - name: Installing latest 'rpi-update'
      apt: name=rpi-update state=latest force=yes
      become: yes

    - name: Updating firmware
      command: rpi-update
    #=====================================

    #========= CONFIGURING PROMPT ========
    # required because 'command: mv ...' will return error
    # if /etc/skel does not exist
    - name: check if /etc/skel exists
      stat: path=/etc/skel
      register: skel_stat

    - name: check if /etc/skel.dist exists (in case /etc/skel was already backed up)
      stat: path=/etc/skel.dist
      register: skel_dist_stat

    - name: Backup distro /etc/skel
      command: mv /etc/skel /etc/skel.dist
      become: yes
      when: skel_stat.stat.exists == True and skel_dist_stat.stat.exists == False

    - name: Copying /etc/skel contents
      copy: src=etc/skel/ dest=/etc/skel
      become: yes

    - name: Copying .bashrc and .profile to home directory
      copy: src=etc/skel/ dest="{{ ansible_env.HOME}}/"
    #=====================================

    #========== DISTRO UPGRADE ===========
    - name: Upgrading distro
      apt: upgrade=dist autoclean=yes autoremove=yes
      become: yes
    #====================================

    #========= SET ROOT PASSWORD: ========
    - name: Change root password
      user: name=root password="{{ new_root_passwd }}"
      become: yes
    #=====================================
...
